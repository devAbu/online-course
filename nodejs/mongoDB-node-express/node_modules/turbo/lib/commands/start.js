"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@turbo/core");
const net_1 = require("@turbo/net");
const child_process_1 = __importDefault(require("child_process"));
const defaultLayout = {
    windows: [
        {
            name: "debug",
            panes: [
                { type: "component", component: "test1" },
                { type: "component", component: "test2" },
                { type: "shell" },
            ],
        },
        { name: "sh", panes: [{ type: "shell" }] },
    ],
};
function spawnDaemon(turbo, id) {
    try {
        const exec = turbo.env.nodePath;
        const args = [turbo.env.scriptPath, "--session", id, "daemon"];
        const spawned = child_process_1.default.spawn(exec, args, {
            detached: true,
            stdio: "ignore",
        });
        spawned.on("exit", code => {
            console.error(`daemon died! ${code}`);
        });
        spawned.on("error", err => {
            console.error(err);
        });
        if (spawned.stdout) {
            spawned.stdout.on("data", data => {
                process.stdout.write(data);
            });
        }
        if (spawned.stderr) {
            spawned.stderr.on("data", data => {
                process.stderr.write(data);
            });
        }
    }
    catch (e) {
        console.error("failed to spawn daemon");
        console.error(e);
        process.exit(1);
    }
}
function start(turbo) {
    const id = core_1.generateSessionId(turbo);
    const layout = turbo.config.layout || defaultLayout;
    spawnDaemon(turbo, id);
    const client = new net_1.Client(turbo, {
        type: "managed",
        sessionId: id,
        maxRetries: 20,
    });
    client.connect();
    client.on("ready", () => {
        const shell = core_1.createShell(turbo);
        shell.start(id, layout, turbo);
    });
}
exports.start = start;
//# sourceMappingURL=start.js.map