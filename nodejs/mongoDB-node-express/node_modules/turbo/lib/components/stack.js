"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const helpers_1 = require("./helpers");
const renderer_1 = require("../renderer");
const core_1 = require("@turbo/core");
function Stack() {
    const client = helpers_1.useClient();
    const turbo = helpers_1.useTurbo();
    const state = helpers_1.useClientState();
    if (!state)
        return react_1.default.createElement(renderer_1.Box, null);
    if (!state.target.paused) {
        return react_1.default.createElement(renderer_1.Box, null, "not paused");
    }
    function onClick(frame) {
        core_1.logger.verbose("will focus " + frame);
        client.dispatch({ type: "focus", frame });
    }
    return (react_1.default.createElement(renderer_1.Box, { direction: "column" }, state.target.callFrames.map((f, i) => {
        const script = helpers_1.getScript(state, f.location.scriptId);
        if (script) {
            const url = turbo.env.cleanPath(script.url);
            return (react_1.default.createElement(renderer_1.Box, { key: i, onClick: () => onClick(i) },
                react_1.default.createElement(renderer_1.Box, { color: "red" }, i === state.target.focusedCallFrame
                    ? "> "
                    : "  "),
                f.functionName || "<anonymous>",
                " (",
                url,
                ":",
                f.location.line + 1,
                f.location.column !== undefined
                    ? `:${f.location.column + 1}`
                    : "",
                ")"));
        }
        else {
            return react_1.default.createElement(renderer_1.Box, null);
        }
    })));
}
exports.Stack = Stack;
//# sourceMappingURL=stack.js.map