import { EmitterBase, Turbo, Logger } from "@turbo/core";
interface LogServerEvents {
    ready: void;
    error: Error;
}
export declare class SocketLogServer extends EmitterBase<LogServerEvents> implements Logger {
    private server;
    private connections;
    private buffer;
    readonly socketPath: string;
    static create(turbo: Turbo): Promise<SocketLogServer>;
    private constructor();
    start(): void;
    log(msg: string): void;
}
interface LogClientEvents {
    data: string;
}
export declare class LogClient extends EmitterBase<LogClientEvents> {
    private path;
    private socket;
    constructor(path: string);
    connect(): void;
    private connectAfterDelay;
}
export {};
