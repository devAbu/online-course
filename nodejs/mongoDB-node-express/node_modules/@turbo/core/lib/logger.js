"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const emitter_1 = require("./emitter");
class LoggerImpl extends emitter_1.EmitterBase {
    constructor() {
        super(...arguments);
        this.context = "";
    }
    error(msg) {
        this.fire("log", { level: "error", msg });
    }
    warn(msg) {
        this.fire("log", { level: "warn", msg });
    }
    info(msg) {
        this.fire("log", { level: "info", msg });
    }
    verbose(msg) {
        this.fire("log", { level: "verbose", msg });
    }
    debug(msg) {
        this.fire("log", { level: "debug", msg });
    }
}
exports.logger = new LoggerImpl();
function format(log) {
    switch (log.level) {
        case "error":
            return chalk_1.default.red("err] ") + log.msg + "\n";
        case "warn":
            return chalk_1.default.yellow("wrn] ") + log.msg + "\n";
        case "info":
            return chalk_1.default.blue("nfo] ") + log.msg + "\n";
        case "verbose":
            return chalk_1.default.magenta("ver] ") + log.msg + "\n";
        case "debug":
            return chalk_1.default.dim("dbg] ") + log.msg + "\n";
    }
}
exports.format = format;
//# sourceMappingURL=logger.js.map