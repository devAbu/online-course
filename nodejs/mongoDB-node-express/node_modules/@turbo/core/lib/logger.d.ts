import { EmitterBase } from "./emitter";
export declare type LogLevel = "error" | "warn" | "info" | "verbose" | "debug";
export interface LogEvent {
    level: LogLevel;
    msg: string;
}
interface LoggerEvents {
    log: LogEvent;
}
export interface Logger {
    log(msg: string): void;
}
export interface LevelLogger {
    error(msg: string): void;
    warn(msg: string): void;
    info(msg: string): void;
    verbose(msg: string): void;
    debug(msg: string): void;
}
declare class LoggerImpl extends EmitterBase<LoggerEvents> implements LevelLogger {
    context: string;
    error(msg: string): void;
    warn(msg: string): void;
    info(msg: string): void;
    verbose(msg: string): void;
    debug(msg: string): void;
}
export declare const logger: LoggerImpl;
export declare function format(log: LogEvent): string;
export {};
