#!/usr/bin/env node
var program=require("commander"),shell=require("shelljs"),path=require("path"),fs=require("fs"),os=require("os"),readdirp=require("readdirp"),colors=require("colors/safe"),scaffold=require("./scaffold"),extend=require("./extend"),utils=require("./utils"),awsClient=require("./aws"),auth=require("./auth"),template=require("./template"),vectors=require("./vectors"),deploy=require("./deploy"),dotenv=require("dotenv"),BASE_URL="https://turbo-dashboard.herokuapp.com",VERTEX_BASE_URL="https://vertex360.herokuapp.com",PLATFORM_VECTOR_URL="https://platform.turbo360-vector.com";program.arguments("<action> <arg>").option("-e, --express","with express").option("-s, --static","static site").option("-r, --react","react/redux app").option("-v, --vertex","vertex project").option("-vc, --vector","vectors app").option("-i, --app_id <app_id>","APP Id").action(function(e,o){}),program.command("help").description("show cheatsheet of basic commands").action(function(){utils.readFile(path.join(__dirname,"package.json")).then(function(e){var o=JSON.parse(e);return console.log(colors.white.bold("\nTURBO CLI VERSION")),console.log(colors.cyan("-> "+o.version)),console.log(colors.white.bold("\nFULL DOCUMENTATION")),console.log(colors.cyan("-> https://docs.turbo360.co")+"\n"),utils.getRequest("https://cdn.turbo360-dev.com/dist/help.json")}).then(function(e){if("success"!==e.confirmation)throw new Error("Help JSON request failed.");var o=e.data;Object.keys(o).forEach(function(e){console.log(colors.white.bold(e.toUpperCase())),o[e].forEach(function(e){console.log(colors.cyan(e.cmd)),console.log(e.desc+"\n")})})}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("new <name>").description("create new Turbo 360 project").action(function(e){shell.mkdir("-p",e),shell.cd(e),program.express?scaffold(shell,e,"fullstack"):program.react?scaffold(shell,e,"react"):(program.vertex,scaffold(shell,e,"vertex"))}),program.command("app <appId>").description("connect app to staging environment").action(function(e){if(0==auth.isLoggedIn())return console.log("\nPlease Log In to Connect Site:"),void console.log("$ turbo login\n");var o=null,n=null,t=null;auth.currentUser().then(function(o){return t=o,utils.getRequest(BASE_URL+"/api/site/"+e)}).then(function(r){if("success"!=r.confirmation)throw new Error(r.message);if(0==auth.isAuthorized(r.result,t))throw new Error("\nYou must be the admin or a collaborator for this project. To login:\n$ turbo login\n");return n=r.result,o={siteId:e,apiKey:n.api.key},utils.readFile(".env","\n\n.env file not found. Please add .env file.\n\n")}).then(function(e){var t=dotenv.parse(e);t.TURBO_APP_ID=o.siteId,t.TURBO_API_KEY=o.apiKey,t.TURBO_APP_SLUG=n.slug,t.TURBO_CDN="https://cdn.turbo360-vertex.com/"+n.slug+"/public",t.TMP_DIR="/tmp",null==t.SESSION_SECRET&&(t.SESSION_SECRET="YOUR_SESSION_SECRET"),null==t.TURBO_ENV&&(t.TURBO_ENV="dev");var r="";return Object.keys(t).forEach(function(e,o){r+=e+"="+t[e]+"\n"}),utils.write(".env",r),console.log(colors.cyan("\nApp credentials successfully configured.\n")),e}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("extend <format>").description("extend Turbo 360 project").action(function(e){console.log(colors.cyan("\nExtending project...\n")),extend(shell,e).then(function(o){const n=null==o.message?"\nProject successfully extended: "+e+"\n":"\n"+o.message+"\n";console.log(colors.cyan(n))}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("template <format>").description("Create Vertex 360 template").action(function(e){if(null==template[e])return console.log("\nInvalid Template. Please Select From the following: "),console.log(Object.keys(template).join("\n")),void console.log("\n");var o=utils.isTurboApp();if(1==o.isTurboApp)return void scaffold(shell,e,"template",null);if("package.json"!=o.missing)return void console.log("\nInvalid Turbo 360 app: "+o.reason+"\n");if(0==auth.isLoggedIn())return console.log("\nPlease Log In:"),void console.log("$ turbo login\n");console.log("Creating template...");var n=null,t=null,r=null;auth.currentUser().then(function(e){return r=e,auth.connectApp()}).then(function(e){if(t=e,0==e.siteId.length)throw new Error("App Id required");if(0==e.apiKey.length)throw new Error("API Key required");return utils.getRequest(BASE_URL+"/api/site/"+e.siteId)}).then(function(o){if(n=o.result,0==auth.isAuthorized(n,r))throw new Error("\nYou must be the admin or a collaborator for this project. To login:\n$ turbo login\n");return t.slug=n.slug,utils.postRequest(PLATFORM_VECTOR_URL+"/seedtemplate",{source:e,app:n.slug})}).then(function(o){var t={category:e,status:"dev"};return utils.putRequest(VERTEX_BASE_URL+"/api/site/"+n.id,{origin:"vertex360",template:t})}).then(function(o){shell.mkdir("-p",t.slug),shell.cd(t.slug),scaffold(shell,e,"template",t)}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("resource <name>").description("Add resource").action(function(e){extend(shell,"resource",{name:e}).then(function(e){shell.echo(colors.cyan("\n"+e.message+"\n"))}).catch(function(e){shell.echo("Error: "+e.message)})}),program.command("page <name>").description("Upload page").action(function(e){var o=null,n=null,t=null;if(0==auth.isLoggedIn())return console.log("\nPlease Log In to Add Page:"),void console.log("$ turbo login\n");auth.currentUser().then(function(e){return o=e,utils.readFile(".env")}).then(function(e){n=dotenv.parse(e);var o=n.TURBO_APP_ID;if(null==o)throw new Error('Missing App ID. Please add to .env file under "TURBO_APP_ID" key.');if(o.length<20)throw new Error('Please specify Turbo App ID in the .env file under "TURBO_APP_ID" key.');return utils.getRequest(BASE_URL+"/api/site/"+o)}).then(function(n){if(t=n.result,0==auth.isAuthorized(t,o))throw new Error("\nYou must be the admin or a collaborator to deploy this project. To login:\n$ turbo login\n");return shell.cd("pages"),utils.readFile(e+".json")}).then(function(o){if(shell.cd(".."),"global"==e)return utils.putRequest(VERTEX_BASE_URL+"/api/site/"+t.id,{globalConfig:o});var n=JSON.stringify(o);return utils.postRequest(PLATFORM_VECTOR_URL+"/pageconfig",{app:t.slug,page:e,config:n})}).then(function(o){return"global"==e?null:utils.postRequest(BASE_URL+"/admin/resetpage",{page:e,appslug:t.slug})}).then(function(o){console.log(colors.cyan("\nPage Successfully Configured: "+e+"\n"))}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("connect").description("Connect to Vertex 360 site").action(function(){var e=null,o=null,n=null,t=null;if(0==auth.isLoggedIn())return console.log("\nPlease Log In to Connect Site:"),void console.log("$ turbo login\n");auth.connectApp().then(function(e){if(0==e.siteId.length)throw new Error("App Id required");if(0==e.apiKey.length)throw new Error("API Key required");return o=e,auth.currentUser()}).then(function(e){return t=e,utils.getRequest(BASE_URL+"/api/site/"+o.siteId)}).then(function(r){if("success"!=r.confirmation)throw new Error(r.message);if(0==auth.isAuthorized(r.result,t))throw new Error("\nYou must be the admin or a collaborator for this project. To login:\n\n$ turbo login\n");if(n=r.result,e=o,n.api.key!==e.apiKey)throw new Error("Invalid API Key.");try{fs.readFileSync(".env","utf8")}catch(e){utils.write(".env",utils.defaultEnv())}return utils.readFile(".env","\n\n.env file not found. Please add .env file.\n\n")}).then(function(o){var t=dotenv.parse(o);t.TURBO_APP_ID=e.siteId,t.TURBO_API_KEY=e.apiKey,t.TURBO_APP_SLUG=n.slug,t.TURBO_CDN="https://cdn.turbo360-vertex.com/"+n.slug+"/public",t.TMP_DIR="/tmp",null==t.SESSION_SECRET&&(t.SESSION_SECRET="YOUR_SESSION_SECRET"),null==t.TURBO_ENV&&(t.TURBO_ENV="dev");var r="";return Object.keys(t).forEach(function(e,o){r+=e+"="+t[e]+"\n"}),utils.write(".env",r),console.log("\nApp successfully connected to Turbo 360 hosting environment! To deploy:\n\n$ turbo deploy\n"),o}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("logs").description("show logs").action(function(e,o){if(0==auth.isLoggedIn())return console.log("\nPlease Log In to Connect Site:"),void console.log("$ turbo login\n");var n=null,t=null;auth.currentUser().then(function(e){return t=e,utils.readFile(".env","\n\n.env file not found. Please add .env file.\n\n")}).then(function(e){var o=dotenv.parse(e),n=[{text:"TURBO_APP_ID",min:20,placeholder:"<TURBO_APP_ID>"}];if(null!=utils.validateEnv(o,n))throw new Error("\nEnv mis-configuration. Connect project to Turbo site then try again:\n\n$ turbo connect\n\n");return utils.getRequest(BASE_URL+"/api/site/"+o.TURBO_APP_ID)}).then(function(e){if("success"!=e.confirmation)throw new Error(e.message);if(0==auth.isAuthorized(e.result,t))throw new Error("\nYou must be the admin or a collaborator for this project. To login:\n$ turbo login\n");return n=e.result,utils.postRequest(PLATFORM_VECTOR_URL+"/logs",{site:{id:n.id,slug:n.slug}})}).then(function(e){const o=e.data.join("");console.log("\n"+o)}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("version").description("show current version").action(function(e,o){utils.readFile(path.join(__dirname,"package.json")).then(function(e){var o=JSON.parse(e);console.log(colors.cyan("\nTurbo CLI Version: "+o.version+"\n"))}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("login").description("login to Turbo 360 account").action(function(e,o){auth.showPrompt().then(function(e){return utils.postRequest(BASE_URL+"/account/login",{email:e.email,password:e.password})}).then(function(e){if("success"!=e.confirmation)throw new Error(e.message);var o={id:e.user._id,username:e.user.username,image:e.user.image,slug:e.user.slug,firstName:e.user.firstName,lastName:e.user.lastName};return shell.cd(""),utils.write(".turbo_user",JSON.stringify(o,null,2)+"\n"),console.log(colors.cyan("\nSuccess: Currently Logged In As "+o.username+"\n")),o}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("check-env").description("check env file").action(function(e,o){try{fs.readFileSync(".env","utf8")}catch(e){return void utils.write(".env",utils.defaultEnv())}}),program.command("postinstall").description("npm post install hook").action(function(e,o){try{fs.readFileSync(".env","utf8")}catch(e){return void utils.write(".env",utils.defaultEnv())}}),program.command("devserver").option("-p, --python","run flask server").description("run development server").action(function(e,o){var n=process.platform,t=e.python?"python":"node";return utils.readFile("package.json","\n\npackage.json file not found. make sure you are in the root directory of the project.\n\n").then(function(e){if("vertex"==JSON.parse(e).format)"win32"==n?shell.exec("node_modules\\.bin\\nodemon node_modules\\vertex360\\www\\vertex_server.js --quiet"):shell.exec("node_modules/.bin/nodemon node_modules/vertex360/www/vertex_server.js --quiet");else{if("python"==t)return void shell.exec("python3 node_modules/turbo360/www/pyserver.py",function(e,o,n){n?console.log("\n* * * * * Please install Flask: $ pip install flask * * * * * \n"):console.log("Program output:",o)});"win32"==n?shell.exec("node_modules\\.bin\\nodemon node_modules\\turbo360\\www\\server.js --quiet"):shell.exec("node_modules/.bin/nodemon node_modules/turbo360/www/server.js --quiet")}}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("deploy").option("-d, --dev","deploy to dev").option("-p, --prod","deploy to production").description("deploy app").action(function(e,o){var n=e.prod?"prod":"dev",t=null,r=null,l=null,s=null,i=null,c=null,u=null;if(0==auth.isLoggedIn())return console.log("\nPlease Log In to Deploy:"),void console.log("$ turbo login\n");auth.currentUser().then(function(e){return c=e,utils.readFile("package.json","\n\npackage.json file not found. Make sure you are in the root directory of the project.\n\n")}).then(function(e){return l=JSON.parse(e),u=null==l.format?"vertex":l.format,"vertex"==u&&(n="vertex"),utils.readFile(".env","\n\n.env file not found. Please add .env file then run:\n\n$ turbo connect\n\n")}).then(function(e){t=dotenv.parse(e);var o=[{text:"TURBO_CDN",min:20,placeholder:"https://cdn.turbo360-vertex.com"},{text:"TURBO_APP_SLUG",min:6,placeholder:"<TURBO_APP_SLUG>"},{text:"TURBO_API_KEY",min:20,placeholder:"<TURBO_API_KEY>"},{text:"TURBO_APP_ID",min:20,placeholder:"<TURBO_APP_ID>"}];if(null!=utils.validateEnv(t,o))throw new Error("\nEnv mis-configuration. Connect project to Turbo site then try again:\n\n$ turbo connect\n\n");return awsClient.deployConfig({app:t.TURBO_APP_ID,env:n})}).then(function(e){if(void 0==e)throw new Error("Turbo app not found. Please check your APP_ID.");if(r=e.app,0==auth.isAuthorized(r,c))throw new Error("\nYou must be the admin or a collaborator to deploy this project. To login:\n$ turbo login\n");return s=e.deploy,i=e.bucket,awsClient.deleteObject({Bucket:i,Key:r.slug},s)}).then(function(e){deploy.deployToVertex(s,i,r)}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("customDeploy").description("Deploy to custom environment").action(function(){if(0==auth.awsConfigSet())return console.log("\nPlease Configure AWS Setting:"),void console.log("$ turbo awsConfig\n");var e=null,o=null;auth.awsConfig().then(function(n){return e=n.key+"::"+n.secret,o=n.role,auth.showAWSPrompt()}).then(function(n){if(0==n.bucket.length)throw new Error("Please specify a bucket");if(0==n.folder.length)throw new Error("Please enter a folder");var t=n.bucket.trim(),r=n.folder.trim();console.log(JSON.stringify(n)),deploy.deployToCustom(e,t,{slug:r,role:o})}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("awsConfig").description("Configure AWS credentials").action(function(){auth.showAWSConfigInputs().then(function(e){if(0==e.awsKey.length)throw new Error("Please enter your AWS key");if(0==e.awsSecret.length)throw new Error("Please enter your AWS secret");if(0==e.awsRole.length)throw new Error("Please enter your AWS role");var o={key:e.awsKey,secret:e.awsSecret,role:e.awsRole};shell.cd(""),utils.write(".turbo_aws_config",JSON.stringify(o,null,2)+"\n"),console.log("AWS Settings Successfully Configured.")}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("package").description("build package").action(function(e,o){if(0==auth.isLoggedIn())return console.log("\nPlease Log In:"),void console.log("$ turbo login\n");var n=null,t=null,r=null,l=null,s=e.prod?"prod":"dev",i=null,c=null;auth.currentUser().then(function(e){return n=e,utils.readFile(".env")}).then(function(e){t=dotenv.parse(e);var o=t.TURBO_APP_ID;if(null==o)throw new Error('Missing App ID. Please add to .env file under "TURBO_APP_ID" key.');if(o.length<20)throw new Error('Please specify Turbo App ID in the .env file under "TURBO_APP_ID" key.');return utils.readFile("package.json")}).then(function(e){return r=JSON.parse(e),null==r.format?null==r.dependencies.react?format="static":null==r.dependencies.express?format="react":format="fullstack":format=r.format,"vertex"==format&&(s="vertex"),awsClient.deployConfig({app:t.TURBO_APP_ID,env:s})}).then(function(e){if(void 0==e)throw new Error("Turbo app not found. Please check your APP_ID.");return l=e.app,i=e.deploy,c=e.bucket,awsClient.deleteObject({Bucket:c,Key:l.slug},i)}).then(function(e){if("vertex"==format)return void deploy.build(i,c,l)}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.command("s3-config").description("Show S3 configuration").action(function(e,o){utils.readFile(path.join(__dirname,"aws/s3-configuration.txt")).then(function(e){console.log(e)}).catch(function(e){console.log(colors.red("\nError: "+e.message+"\n"))})}),program.parse(process.argv);