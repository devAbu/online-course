var shell=require("shelljs"),colors=require("colors/safe"),readdirp=require("readdirp"),base64=require("js-base64"),awsClient=require("../aws"),utils=require("../utils"),path=require("path"),dotenv=require("dotenv"),bestzip=require("bestzip"),BASE_URL="https://www.turbo360.co",zipDirectory=function(){return process.platform,bestzip.nodeZip({source:"*",destination:"../package.zip"})},prepareDirectory=function(e){shell.mkdir("-p",".deploy/"),e.forEach(function(e,n){-1==e.indexOf(".")?(shell.mkdir("-p",".deploy/"+e+"/"),shell.cp("-R",e+"/*",".deploy/"+e+"/")):shell.cp("-R",e,".deploy/"+e)})},configureUploader=function(e,n){return awsClient.s3sync(null,e).on("data",function(e){shell.echo("-n",".")}).once("end",n)},deployComplete=function(e,n,o){utils.readFile("package.json").then(function(o){var t=JSON.parse(o),l={id:e.id,name:e.name,image:e.image,slug:e.slug,origin:e.origin,format:t.format||"vertex"};t["vtx-template"]&&(l["vtx-template"]=t["vtx-template"]);var r={environment:n,site:l};return utils.postRequest("https://platform.turbo360-vector.com/deploycomplete",r)}).then(function(e){}).catch(function(e){})},compile=function(e,n,o,t){return new Promise(function(e,n){var o=null,l={};utils.readFile("package.json").then(function(e){return o=JSON.parse(e),utils.readFile(".env")}).then(function(e){if(l=dotenv.parse(e),null==l.SESSION_SECRET)throw new Error("Please include a SESSION_SECRET environment variable in the .env file.");l.TURBO_ENV="prod";var n=(Object.keys(o.dependencies),Object.assign({},o.devDependencies));return delete o.devDependencies,shell.mkdir("-p",t+"/"),shell.cp("-R","!(node_modules|deploy)",t+"/"),utils.write("./"+t+"/package.json",JSON.stringify(o,null,2)+"\n"),shell.cd(t),shell.mkdir("-p","www"),shell.cp("-R",path.join(__dirname,"../default/vertex/www/bin.js"),"www/bin.js"),shell.exec("npm install --silent --no-progress"),shell.cd(".."),o.devDependencies=n,utils.write("./"+t+"/package.json",JSON.stringify(o,null,2)+"\n"),shell.cd(t),zipDirectory()}).then(function(){shell.cd(".."),shell.mv(["package.zip"],t+"/"),shell.cd(t),shell.rm("-rf","node_modules"),shell.rm("-rf","www"),e(l)}).catch(function(e){console.log("COMPILE ERROR: "+e.message),n(e)})})};module.exports={build:function(e,n,o){console.log("\n\nGenerating package.zip file...\n"),compile(e,n,o,".deploy").then(function(e){shell.mv(["package.zip"],".."),shell.cd(".."),shell.rm("-rf",".deploy"),console.log("\n\n* * * Build complete. Check current directory for package.zip file. * * *\n\n")}).catch(function(e){var n=colors.red("\n\nERROR: "+e.message+"\n\n");console.log(n)})},deployToVertex:function(e,n,o){var t=o.slug+"/",l={};console.log(colors.cyan("\n\nDeploying to Turbo 360 Hosting Environment...\n")),compile(e,n,o,".deploy").then(function(r){l=r,shell.cd("..");var i=function(){shell.rm("-rf",".deploy");var n=t.split("/")[0],r={name:n,path:n+"/package.zip",env:l};utils.postRequest("https://platform.turbo360-vector.com/resetfunction",{lambda:r}).then(function(n){var t="vertex360"==o.origin?".vertex360.co":".turbo360-vertex.com";console.log(colors.cyan("\n\nDEPLOY COMPLETE!\nStaging URL: https://"+r.name+t+"\n")),deployComplete(o,"production",e)}).catch(function(e){var n=colors.red("\n\nERROR: "+e.message+"\n\n");console.log(n)})},c=e.split("::"),s=configureUploader({key:c[0],secret:c[1],bucket:n,concurrency:16,prefix:t},i);readdirp({root:".deploy"}).pipe(s)}).catch(function(e){var n=colors.red("\n\nERROR: "+e.message+"\n\n");console.log(n)})},deployToCustom:function(e,n,o){var t=o.slug+"/",l={};console.log("\n\nDeploying to Turbo Staging Environment...\n"),compile(e,n,o,".deploy").then(function(r){l=r,shell.cd("..");var i=function(){shell.rm("-rf",".deploy");var r=t.split("/")[0],i={config:e,name:r,path:r+"/package.zip",env:l,bucket:n,role:o.role};awsClient.getFunction(i).then(function(e){return null==e?null:awsClient.deleteFunction(i)}).then(function(o){return awsClient.deleteObject({Bucket:n,Key:r+"/"},e)}).then(function(e){return awsClient.deployVertex(i)}).then(function(e){console.log('\n* * *\nDEPLOY COMPLETE.\nYour app has been uploaded to the specified S3 bucket (folder name: "'+r+'") and a corresponding Lambda function with the same name has been created to run it.\nNEXT STEPS: Create an API via API Gateway and connect it to the Lambda function.\n* * *\n')}).catch(function(e){console.log("ERROR: "+e.message)})},c=e.split("::"),s=configureUploader({key:c[0],secret:c[1],bucket:n,concurrency:16,prefix:t},i);readdirp({root:".deploy"}).pipe(s)}).catch(function(e){console.log(e.message)})}};